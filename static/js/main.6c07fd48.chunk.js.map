{"version":3,"sources":["components/EmployeeItem.js","components/EmployeeTable/EmployeeTable.js","components/Header.js","components/Filter/Filter.js","utils/API.js","utils/RoleGenerator.js","App.js","reportWebVitals.js","index.js"],"names":["EmployeeItem","picture","fname","lname","role","email","phone","src","alt","EmployeeTable","employees","setEmployees","useState","directionFirstName","setDirectionFirstName","directionLastName","setDirectionLastName","directionRole","setDirectionRole","sortTable","arr","num","sortedArr","sort","a","b","name","first","last","onClick","className","map","employee","index","medium","checked","filter","props","Header","Filter","setFilter","checkboxHandler","event","target","value","filteredEmployees","type","onChange","API","getEmployees","fetch","then","res","json","RoleGenerator","devRoles","item","Math","floor","random","App","useEffect","updatedEmployees","results","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c07fd48.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst EmployeeItem = ({ picture, fname, lname, role, email, phone }) => {\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <img src={picture} alt={`${fname} ${lname}`} />\r\n      </td>\r\n      <td>{fname}</td>\r\n      <td>{lname}</td>\r\n      <td>{role}</td>\r\n      <td>{email}</td>\r\n      <td>{phone}</td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default EmployeeItem\r\n","import React, { useState } from 'react'\r\nimport EmployeeItem from '../EmployeeItem'\r\nimport './EmployeeTable.css'\r\n\r\nconst EmployeeTable = ({ employees, setEmployees }) => {\r\n  const [directionFirstName, setDirectionFirstName] = useState(true)\r\n  const [directionLastName, setDirectionLastName] = useState(true)\r\n  const [directionRole, setDirectionRole] = useState(true)\r\n\r\n  const sortTable = (arr, num) => {\r\n    let sortedArr\r\n    switch (num) {\r\n      case 0:\r\n        sortedArr = [...arr].sort((a, b) => {\r\n          if (directionFirstName) {\r\n            setDirectionFirstName(false)\r\n            return a.name.first > b.name.first\r\n              ? 1\r\n              : b.name.first > a.name.first\r\n              ? -1\r\n              : 0\r\n          } else {\r\n            setDirectionFirstName(true)\r\n            return a.name.first < b.name.first\r\n              ? 1\r\n              : b.name.first < a.name.first\r\n              ? -1\r\n              : 0\r\n          }\r\n        })\r\n        break\r\n      case 1:\r\n        sortedArr = [...arr].sort((a, b) => {\r\n          if (directionLastName) {\r\n            setDirectionLastName(false)\r\n            return a.name.last > b.name.last\r\n              ? 1\r\n              : b.name.last > a.name.last\r\n              ? -1\r\n              : 0\r\n          } else {\r\n            setDirectionLastName(true)\r\n            return a.name.last < b.name.last\r\n              ? 1\r\n              : b.name.last < a.name.last\r\n              ? -1\r\n              : 0\r\n          }\r\n        })\r\n        break\r\n      case 2:\r\n        sortedArr = [...arr].sort((a, b) => {\r\n          if (directionRole) {\r\n            setDirectionRole(false)\r\n            return a.role > b.role ? 1 : b.role > a.role ? -1 : 0\r\n          } else {\r\n            setDirectionRole(true)\r\n            return a.role < b.role ? 1 : b.role < a.role ? -1 : 0\r\n          }\r\n        })\r\n        break\r\n      default:\r\n        break\r\n    }\r\n    setEmployees(sortedArr)\r\n  }\r\n\r\n  const renderTableData = () => {\r\n    const employeeArray = employees.map((employee, index) => (\r\n      <EmployeeItem\r\n        key={index}\r\n        picture={employee.picture.medium}\r\n        fname={employee.name.first}\r\n        lname={employee.name.last}\r\n        role={employee.role}\r\n        email={employee.email}\r\n        phone={employee.phone}\r\n        checked={employee.checked}\r\n      />\r\n    ))\r\n    const newArray = employeeArray.filter(\r\n      (employee) => employee.props.checked === true\r\n    )\r\n    return newArray\r\n  }\r\n\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        <tr>\r\n          <th>Photo</th>\r\n          <th onClick={() => sortTable(employees, 0)}>\r\n            <i className=\"fa fa-sort\"></i> First Name\r\n          </th>\r\n          <th onClick={() => sortTable(employees, 1)}>\r\n            <i className=\"fa fa-sort\"></i> Last Name\r\n          </th>\r\n          <th onClick={() => sortTable(employees, 2)}>\r\n            <i className=\"fa fa-sort\"></i> Role\r\n          </th>\r\n          <th>Email</th>\r\n          <th>Phone</th>\r\n        </tr>\r\n        {renderTableData()}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport default EmployeeTable\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n  return <h1>Employee Directory</h1>\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport './Filter.css'\r\n\r\nconst Filter = ({ employees, setEmployees, filter, setFilter }) => {\r\n  const checkboxHandler = (event) => {\r\n    setFilter({ ...filter, [event.target.value]: !filter[event.target.value] })\r\n    const filteredEmployees = employees.map((employee) => {\r\n      if (employee.role === event.target.value) {\r\n        return { ...employee, checked: !employee.checked }\r\n      } else {\r\n        return employee\r\n      }\r\n    })\r\n    setEmployees(filteredEmployees)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h4>Filter Employees by Role</h4>\r\n      <div className=\"d-flex\">\r\n        <div className=\"checkbox\">\r\n          <input\r\n            type=\"checkbox\"\r\n            value=\"Web Developer\"\r\n            checked={filter['Web Developer']}\r\n            onChange={checkboxHandler}\r\n          ></input>\r\n          <label>Web Developer</label>\r\n        </div>\r\n        <div className=\"checkbox\">\r\n          <input\r\n            type=\"checkbox\"\r\n            value=\"QA Engineer\"\r\n            checked={filter['QA Engineer']}\r\n            onChange={checkboxHandler}\r\n          ></input>\r\n          <label>QA Engineer</label>\r\n        </div>\r\n        <div className=\"checkbox\">\r\n          <input\r\n            type=\"checkbox\"\r\n            value=\"Database Administrator\"\r\n            checked={filter['Database Administrator']}\r\n            onChange={checkboxHandler}\r\n          ></input>\r\n          <label>Database Administrator</label>\r\n        </div>\r\n        <div className=\"checkbox\">\r\n          <input\r\n            type=\"checkbox\"\r\n            value=\"Computer Systems Analyst\"\r\n            checked={filter['Computer Systems Analyst']}\r\n            onChange={checkboxHandler}\r\n          ></input>\r\n          <label>Computer Systems Analyst</label>\r\n        </div>\r\n        <div className=\"checkbox\">\r\n          <input\r\n            type=\"checkbox\"\r\n            value=\"Network Administrator\"\r\n            checked={filter['Network Administrator']}\r\n            onChange={checkboxHandler}\r\n          ></input>\r\n          <label>Network Administrator</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter\r\n","const API = {\r\n  getEmployees: () => {\r\n    return fetch(\r\n      'https://randomuser.me/api/?results=40&inc=picture,name,email,phone&noinfo&nat=ca'\r\n    ).then((res) => res.json())\r\n  },\r\n}\r\n\r\nexport default API\r\n","const RoleGenerator = (arr) => {\r\n  const devRoles = [\r\n    'Web Developer',\r\n    'QA Engineer',\r\n    'Database Administrator',\r\n    'Computer Systems Analyst',\r\n    'Network Administrator',\r\n  ]\r\n\r\n  return arr.map((item) => ({\r\n    ...item,\r\n    role: devRoles[Math.floor(Math.random() * 5)],\r\n    checked: true,\r\n  }))\r\n}\r\n\r\nexport default RoleGenerator\r\n","import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport EmployeeTable from './components/EmployeeTable/EmployeeTable'\nimport Header from './components/Header'\nimport Filter from './components/Filter/Filter'\nimport API from './utils/API'\nimport RoleGenerator from './utils/RoleGenerator'\n\nfunction App() {\n  const [employees, setEmployees] = useState([])\n  const [filter, setFilter] = useState({\n    'Web Developer': true,\n    'QA Engineer': true,\n    'Database Administrator': true,\n    'Computer Systems Analyst': true,\n    'Network Administrator': true,\n  })\n\n  useEffect(() => {\n    API.getEmployees().then((res) => {\n      const updatedEmployees = RoleGenerator(res.results)\n      setEmployees(updatedEmployees)\n    })\n  }, [])\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <Filter\n        employees={employees}\n        setEmployees={setEmployees}\n        filter={filter}\n        setFilter={setFilter}\n      />\n      <EmployeeTable employees={employees} setEmployees={setEmployees} />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}